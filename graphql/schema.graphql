### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Boat {
  id: String
  image: String
  name: String
  user: User
}

type Mutation {
  addBoat(args: addBoatArgs!): addBoatResponse
  deleteBoat(id: String!): removeBoatResponse
  user(credentials: createUserArgs!): createUserResponse
}

type Query {
  gestioneParametri(email: String!): User
  user(email: String!): User
  users: [User]!
}

enum Role {
  ADMIN
  COLLABORATOR
  OWNER
}

type User {
  boats: [Boat]

  """
  Email of the user
  """
  email: String
  id: String
  image: String
  name: String
  password: String
  role: Role
}

input addBoatArgs {
  image: String!
  maxPeople: Int!
  name: String!
  userId: String!
}

type addBoatResponse {
  error: Boolean
  message: String
}

input createUserArgs {
  email: String!
  name: String!
  password: String!
}

type createUserResponse {
  error: Boolean
  message: String
}

type removeBoatResponse {
  message: String
  valido: Boolean
}
